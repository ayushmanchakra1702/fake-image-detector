# -*- coding: utf-8 -*-
"""web_app_imag_processing_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jDwepONJ-iwensMnAUJ0uREDBUbxBPts
"""

import tensorflow as tf

# Load the model
model = tf.keras.models.load_model('/content/my_model.h5')

# Confirm it's loaded
model.summary()

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import tensorflow as tf
# from PIL import Image
# import numpy as np
# 
# st.title("🕵️ Fake Image Detector")
# st.write("Upload an image and we'll tell you if it's real or fake.")
# 
# # Load your model
# model = tf.keras.models.load_model('my_model.h5')
# 
# # Upload image
# uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
# if uploaded_file is not None:
#     image = Image.open(uploaded_file)
#     st.image(image, caption='Uploaded Image', use_column_width=True)
# 
#     # Preprocess
#     img = image.resize((128, 128))  # change based on your model input size
#     img_array = np.array(img) / 255.0
#     img_array = np.expand_dims(img_array, axis=0)
# 
#     # Predict
#     prediction = model.predict(img_array)[0][0]
#     label = "Fake" if prediction > 0.5 else "Real"
# 
#     st.subheader(f"Prediction: {label} ({prediction:.2f})")
#

#!cp /content/drive/MyDrive/image_processing_project_docs/my_model.h5 my_model.h5

!zip -r fake_image_app.zip app.py requirements.txt my_model.h5

